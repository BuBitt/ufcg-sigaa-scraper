#!/usr/bin/env python3
"""
Script de teste para verificar a configura√ß√£o do sistema refatorado.
"""

import sys
from src.core.sigaa_scraper import SIGAAScraper
from src.config.settings import Config


def test_extraction_method():
    """Testa a configura√ß√£o do m√©todo de extra√ß√£o."""
    
    print("üîß Testando configura√ß√£o do sistema refatorado...")
    
    # Criar inst√¢ncia do scraper
    scraper = SIGAAScraper(debug_mode=True)
    
    # Verificar m√©todo configurado
    method = Config.get_extraction_method()
    print(f"üìä M√©todo configurado: {method}")
    
    if method == "menu_ensino":
        print("‚úÖ Usando m√©todo Menu Ensino (recomendado)")
        print("   - Mais r√°pido e direto")
        print("   - Acessa via menu Ensino > Consultar Minhas Notas")
    elif method == "materia_individual":
        print("‚úÖ Usando m√©todo Mat√©ria Individual")
        print("   - M√©todo original")
        print("   - Acessa cada mat√©ria separadamente")
    else:
        print(f"‚ö†Ô∏è  M√©todo inv√°lido '{method}', ser√° usado 'menu_ensino' por padr√£o")
    
    # Verificar outras configura√ß√µes relevantes
    print(f"\nüîç Outras configura√ß√µes:")
    print(f"   - Vers√£o: {Config.VERSION}")
    print(f"   - Headless: {Config.HEADLESS_BROWSER}")
    print(f"   - Timeout: {Config.TIMEOUT_DEFAULT}ms")
    print(f"   - Cache: {Config.CACHE_FILENAME}")
    print(f"   - Logs: {Config.LOG_FILENAME}")
    
    # Testar configura√ß√£o completa
    print(f"\nüß™ Testando configura√ß√£o completa...")
    if scraper.test_configuration():
        print("‚úÖ Configura√ß√£o v√°lida!")
    else:
        print("‚ùå Problemas na configura√ß√£o detectados")
    
    print("\n‚úÖ Teste de configura√ß√£o conclu√≠do!")
    return method


if __name__ == "__main__":
    try:
        test_extraction_method()
    except Exception as e:
        print(f"‚ùå Erro durante o teste: {e}")
        sys.exit(1)
