name: SIGAA Grade Scraper

on:
  schedule:
  workflow_dispatch:      # Permite rodar manualmente

jobs:
  scrape-grades:
    runs-on: ubuntu-latest

    steps:
      # Faz checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configura cache pras dependências Python
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Configura o Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Instala dependências (usando cache se disponível)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install playwright beautifulsoup4 lxml requests python-dotenv

      # Configura cache pros binários do Playwright
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/sigaa-scraper.py') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # Instala os binários do Playwright (se não estiver em cache)
      - name: Install Playwright browsers
        run: |
          playwright install chromium

      # Configura cache pro grades_cache.json
      - name: Cache grades_cache.json
        uses: actions/cache@v4
        with:
          path: grades_cache.json
          key: ${{ runner.os }}-grades-cache-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-grades-cache-

      # Configura variáveis de ambiente a partir dos secrets
      - name: Set environment variables
        env:
          SIGAA_USERNAME: ${{ secrets.SIGAA_USERNAME }}
          SIGAA_PASSWORD: ${{ secrets.SIGAA_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_GROUP_CHAT_ID: ${{ secrets.TELEGRAM_GROUP_CHAT_ID }}
          TELEGRAM_PRIVATE_CHAT_ID: ${{ secrets.TELEGRAM_PRIVATE_CHAT_ID }}
        run: |
          echo "SIGAA_USERNAME=$SIGAA_USERNAME" >> .env
          echo "SIGAA_PASSWORD=$SIGAA_PASSWORD" >> .env
          echo "TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN" >> .env
          echo "TELEGRAM_GROUP_CHAT_ID=$TELEGRAM_GROUP_CHAT_ID" >> .env
          echo "TELEGRAM_PRIVATE_CHAT_ID=$TELEGRAM_PRIVATE_CHAT_ID" >> .env

      # Roda o script principal
      - name: Run SIGAA Scraper
        run: python sigaa-scraper.py

      # Garante que o grades_cache.json seja salvo no repositório (opcional)
      - name: Commit grades_cache.json changes
        if: always()  # Roda mesmo se o script falhar, pra manter o cache
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add grades_cache.json
          git commit -m "Update grades_cache.json" || echo "No changes to commit"
          git push