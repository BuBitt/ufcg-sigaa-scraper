name: SIGAA Grade Scraper

on:
  schedule:
    - cron: "0 12 * * *"  # Roda todo dia às 12:00 UTC
  workflow_dispatch:

jobs:
  scrape-grades:
    runs-on: ubuntu-latest

    steps:
      # Faz checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache pras dependências Python (pip)
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip  # Onde o pip armazena os pacotes baixados
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}  # Chave única baseada no SO e requirements.txt (se existir)
          restore-keys: |
            ${{ runner.os }}-pip-  # Reusa cache anterior se a chave exata não existir

      # Configura o Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Instala dependências (usa o cache do pip se disponível)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install playwright beautifulsoup4 lxml requests python-dotenv

      # Cache pros binários do Playwright (Chromium)
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/playwright  # Onde o Playwright armazena os binários do Chromium
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/sigaa-scraper.py') }}  # Chave baseada no SO e no script
          restore-keys: |
            ${{ runner.os }}-playwright-  # Reusa cache anterior se a chave exata não existir

      # Instala os binários do Playwright (pula se já tiver no cache)
      - name: Install Playwright browsers
        run: |
          playwright install chromium

      # Cache pro grades_cache.json
      - name: Cache grades_cache.json
        uses: actions/cache@v4
        with:
          path: grades_cache.json  # Arquivo de cache das notas
          key: ${{ runner.os }}-grades-cache-${{ github.sha }}  # Chave baseada no SHA do commit pra persistência
          restore-keys: |
            ${{ runner.os }}-grades-cache-  # Reusa o cache mais recente se o SHA mudar

      # Configura variáveis de ambiente a partir dos secrets
      - name: Set environment variables
        env:
          SIGAA_USERNAME: ${{ secrets.SIGAA_USERNAME }}
          SIGAA_PASSWORD: ${{ secrets.SIGAA_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_GROUP_CHAT_ID: ${{ secrets.TELEGRAM_GROUP_CHAT_ID }}
          TELEGRAM_PRIVATE_CHAT_ID: ${{ secrets.TELEGRAM_PRIVATE_CHAT_ID }}
        run: |
          echo "SIGAA_USERNAME=$SIGAA_USERNAME" >> .env
          echo "SIGAA_PASSWORD=$SIGAA_PASSWORD" >> .env
          echo "TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN" >> .env
          echo "TELEGRAM_GROUP_CHAT_ID=$TELEGRAM_GROUP_CHAT_ID" >> .env
          echo "TELEGRAM_PRIVATE_CHAT_ID=$TELEGRAM_PRIVATE_CHAT_ID" >> .env

      # Roda o script principal
      - name: Run SIGAA Scraper
        run: python sigaa-scraper.py
