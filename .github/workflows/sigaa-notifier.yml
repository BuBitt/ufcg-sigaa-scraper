name: SIGAA Grade Scraper

on:
  #schedule:
    # Runs every 10 minutes between 5:00 and 00:00 (BrasÃ­lia time, UTC-3)
    #- cron: "*/10 8-23 * * *"  # 5:00 to 20:59 UTC-3
    #- cron: "*/10 0-3 * * *"   # 21:00 to 00:00 UTC-3
  workflow_dispatch:

jobs:
  scrape-grades:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install playwright beautifulsoup4 lxml requests python-dotenv

      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/main.py') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: |
          playwright install chromium

      - name: Download grades cache from previous run
        id: download-artifact
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: grades_cache
          path: .

      - name: Check if download succeeded
        id: check-artifact
        run: |
          if [ -f "grades_cache.json" ]; then
            echo "Artifact download successful"
            echo "cache_exists=true" >> $GITHUB_OUTPUT
          else
            echo "No artifact found, will create new cache file"
            echo "cache_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create empty cache file if needed
        if: steps.check-artifact.outputs.cache_exists != 'true'
        run: |
          echo "{}" > grades_cache.json
          echo "Created new empty grades_cache.json file"

      - name: Set environment variables
        run: |
          echo "SIGAA_USERNAME=${{ secrets.SIGAA_USERNAME }}" >> .env
          echo "SIGAA_PASSWORD=${{ secrets.SIGAA_PASSWORD }}" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "TELEGRAM_GROUP_CHAT_ID=${{ secrets.TELEGRAM_GROUP_CHAT_ID }}" >> .env
          echo "TELEGRAM_PRIVATE_CHAT_ID=${{ secrets.TELEGRAM_PRIVATE_CHAT_ID }}" >> .env

      - name: Run SIGAA Scraper
        run: python main.py

      - name: Upload grades cache for next run
        uses: actions/upload-artifact@v4
        with:
          name: grades_cache
          path: grades_cache.json
          retention-days: 7
          if-no-files-found: error