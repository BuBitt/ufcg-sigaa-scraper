name: SIGAA Grade Scraper

on:
  schedule:
    # Executa de hora em hora das 6h às 23h BRT (9h às 02h UTC)
    # BRT = UTC-3, então 6h BRT = 9h UTC e 23h BRT = 2h UTC do dia seguinte
    - cron: "*/45 9-23 * * *" # 9h às 23h UTC (6h às 20h BRT)
    - cron: "*/45 0-2 * * *" # 0h às 2h UTC (21h às 23h BRT do dia anterior)
  workflow_dispatch:

jobs:
  scrape-grades:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/main.py') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: |
          playwright install chromium

      - name: Download grades cache from previous workflow
        id: download-grades-cache
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: sigaa-notifier.yml
          name: grades-cache
          path: .
          check_artifacts: true
          search_artifacts: true
          skip_unpack: false
          if_no_artifact_found: warn

      - name: Debug - List downloaded files
        run: |
          if [ -f "grades_cache.json" ]; then
            echo "grades_cache.json exists, size: $(stat -c%s grades_cache.json) bytes"
          else
            echo "grades_cache.json does NOT exist, creating empty file"
            echo "{}" > grades_cache.json
          fi

      - name: Set environment variables
        run: |
          echo "SIGAA_USERNAME=${{ secrets.SIGAA_USERNAME }}" >> .env
          echo "SIGAA_PASSWORD=${{ secrets.SIGAA_PASSWORD }}" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "TELEGRAM_GROUP_CHAT_ID=${{ secrets.TELEGRAM_GROUP_CHAT_ID }}" >> .env
          echo "TELEGRAM_PRIVATE_CHAT_ID=${{ secrets.TELEGRAM_PRIVATE_CHAT_ID }}" >> .env
          echo "EXTRACTION_METHOD=${{ secrets.EXTRACTION_METHOD }}" >> .env
          echo "ENABLE_GITHUB_NOTIFICATIONS=${{ secrets.ENABLE_GITHUB_NOTIFICATIONS || 'false' }}" >> .env

      - name: Test configuration
        run: python main.py --test

      - name: Run SIGAA Scraper
        run: python main.py

      - name: Upload grades cache for next workflow
        uses: actions/upload-artifact@v4
        with:
          name: grades-cache
          path: grades_cache.json
          retention-days: 90
          overwrite: true
          if-no-files-found: error
